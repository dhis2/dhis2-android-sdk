[versions]
dhis2AndroidSdkVersion = "1.11.1-SNAPSHOT"
dhis2AndroidSdkCode = "296"

gradle = "8.6.1"
kotlin = "2.0.20"
ktlint = "12.1.1"
sonarqube = "3.3"
detekt = "1.21.0"
dokka = "1.9.20"
nexusPublish = "2.0.0"
apiCompatibility = "0.16.3"

targetSdkVersion = "34"
minSdkVersion = "21"

libraryDesugaring = "2.0.4"

# android
annotation = "1.6.0"
paging = "3.2.1"

# java
jackson = "2.13.4"
autoValue = "1.10.2"
autoValueCursor = "2.0.1"
okHttp = "4.12.0"
ktor = "2.1.3"
rxJava = "2.2.21"
rxAndroid = "2.1.1"
sqlCipher = "4.5.5"
sqlLite = "2.2.0"
zip4j = "2.11.5"
smsCompression = "0.2.0"
expressionParser = "1.0.36"

# Kotlin
kotlinxDatetime = "0.6.0"
coroutines = "1.6.4"
koin = "3.5.6"
koinKsp = "1.3.1"

# test dependencies
coreTesting = "2.2.0"
jUnit = "4.13.2"
mockito = "3.4.6"
mockitoKotlin = "2.2.0"
truth = "1.1.3"
testRunner = "1.5.2"
testRules = "1.5.0"
equalsVerifier = "3.14"
liveDataTesting = "1.3.0"

# open id
appauth = "0.8.1"

# listenablefuture empty
listenablefuture = "9999.0-empty-to-avoid-conflict-with-guava"


[libraries]
gradle = { group = "com.android.tools.build", name = "gradle", version.ref = "gradle" }
kotlin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
ktlint = { group = "org.jlleitschuh.gradle", name = "ktlint-gradle", version.ref = "ktlint" }

desugaring = { group = "com.android.tools", name = "desugar_jdk_libs", version.ref = "libraryDesugaring" }

rx-java = { group = "io.reactivex.rxjava2", name = "rxjava", version.ref = "rxJava" }
rx-android = { group = "io.reactivex.rxjava2", name = "rxandroid", version.ref = "rxAndroid" }

androidx-annotation = { group = "androidx.annotation", name = "annotation", version.ref = "annotation" }
androidx-paging-runtime = { group = "androidx.paging", name = "paging-runtime", version.ref = "paging" }
androidx-paging-testing = { group = "androidx.paging", name = "paging-testing", version.ref = "paging" }

google-auto-value-annotation = { group = "com.google.auto.value", name = "auto-value-annotations", version.ref = "autoValue" }
google-auto-value = { group = "com.google.auto.value", name = "auto-value", version.ref = "autoValue" }
google-truth = { group = "com.google.truth", name = "truth", version.ref = "truth" }

auto-value-cursor = { group = "com.gabrielittner.auto.value", name = "auto-value-cursor", version.ref = "autoValueCursor" }
auto-value-cursor-annotations = { group = "com.gabrielittner.auto.value", name = "auto-value-cursor-annotations", version.ref = "autoValueCursor" }

koin-core = { group = "io.insert-koin", name = "koin-core", version.ref = "koin" }
koin-annotations = { group = "io.insert-koin", name = "koin-annotations", version.ref = "koinKsp" }
koin-compiler = { group = "io.insert-koin", name = "koin-ksp-compiler", version.ref = "koinKsp" }

jackson-core = { group = "com.fasterxml.jackson.core", name = "jackson-databind", version.ref = "jackson" }
jackson-kotlin = { group = "com.fasterxml.jackson.module", name = "jackson-module-kotlin", version.ref = "jackson" }

okhttp = { group = "com.squareup.okhttp3", name = "okhttp", version.ref = "okHttp" }
okhttp-logging = { group = "com.squareup.okhttp3", name = "logging-interceptor", version.ref = "okHttp" }
okhttp-mockwebserver = { group = "com.squareup.okhttp3", name = "mockwebserver", version.ref = "okHttp" }

ktor = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor"}
ktor-okhttp = { group = "io.ktor", name = "ktor-client-okhttp", version.ref = "ktor"}
ktor-negotiation = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktor"}
ktor-jackson = { group = "io.ktor", name = "ktor-serialization-jackson", version.ref = "ktor"}
ktor-serialization-kotlinx-json = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-mock = { group = "io.ktor", name = "ktor-client-mock", version.ref = "ktor"}

kotlinx-datetime = { group = "org.jetbrains.kotlinx", name = "kotlinx-datetime", version.ref = "kotlinxDatetime" }
kotlinx-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-rx2 = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-rx2", version.ref = "coroutines" }
kotlinx-coroutines-test = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "coroutines" }

dhis2-compression = { group = "com.github.dhis2", name = "sms-compression", version.ref = "smsCompression" }
dhis2-antlr-parser = { group = "org.hisp.dhis.parser", name = "dhis-antlr-expression-parser", version.ref = "expressionParser" }

sqlcipher = { group = "net.zetetic", name = "sqlcipher-android", version.ref = "sqlCipher" }
sqlite = { group = "androidx.sqlite", name = "sqlite", version.ref = "sqlLite" }

zip4j = { group = "net.lingala.zip4j", name = "zip4j", version.ref = "zip4j"}

openid-appauth = { group = "net.openid", name = "appauth", version.ref = "appauth" }
listenablefuture-empty = { group = "com.google.guava", name = "listenablefuture", version.ref = "listenablefuture" }

junit = { group = "junit", name = "junit", version.ref = "jUnit" }
mockito-core = { group = "org.mockito", name = "mockito-core", version.ref = "mockito" }
mockito-kotlin = { group = "com.nhaarman.mockitokotlin2", name = "mockito-kotlin", version.ref = "mockitoKotlin" }

equalsverifier = { group = "nl.jqno.equalsverifier", name = "equalsverifier", version.ref = "equalsVerifier" }
androidx-test-runner = { group = "androidx.test", name = "runner", version.ref = "testRunner" }
androidx-test-rules = { group = "androidx.test", name = "rules", version.ref = "testRules" }
androidx-arch-core-testing = { group = "androidx.arch.core", name = "core-testing", version.ref = "coreTesting" }
livedata-testing-ktx = { group = "com.jraska.livedata", name = "testing-ktx", version.ref = "liveDataTesting" }

[plugins]
sonarqube = { id = "org.sonarqube", version.ref = "sonarqube" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
api-compatibility = { id = "org.jetbrains.kotlinx.binary-compatibility-validator", version.ref = "apiCompatibility" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
nexus-publish = { id = "io.github.gradle-nexus.publish-plugin", version.ref = "nexusPublish"}

[bundles]
